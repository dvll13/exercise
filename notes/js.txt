{ SCOPE

    console.log(a)         // undefined
    console.log(typeof a)  // "undefined"
    if (a) {}              // valid
    
    console.log(b)         // error: b is not defined
    if (b) {}              // error: b is not defined
    
    c()                    // works

    var a = 5              // translates to "var a;" on top and "a = 5" on this line
    function c() {}

    Scope chain: parser moves outer reference by outer reference to lexical environment for looking for vars. Starts from where the fn definition sits, not the fn invocation!
}

